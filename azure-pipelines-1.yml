trigger:
- main

pool:
  vmImage: 'windows-2019'

variables:
  BuildConfiguration: 'Release'
  BuildPlatform: 'any cpu'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK'
  inputs:
    packageType: 'sdk'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- powershell: |
    Get-ChildItem -Path **/*.csproj -Recurse | Where-Object { $_.Name -notmatch "SeleniumUnitTest.csproj" } | ForEach-Object {
        Write-Host "Restoring: $($_.FullName)"
        dotnet restore $_.FullName
    }
  displayName: 'Restore Dependencies for Each Project'

- powershell: |
    Get-ChildItem -Path **/*.csproj -Recurse | Where-Object { $_.Name -notmatch "SeleniumUnitTest.csproj" } | ForEach-Object {
        Write-Host "Building: $($_.FullName)"
        dotnet build $_.FullName --configuration $(BuildConfiguration)
    }
  displayName: 'Build Projects'

- powershell: |
    Get-ChildItem -Path **/*[Tt]est.csproj -Recurse | Where-Object { $_.Name -notmatch "SeleniumUnitTest.csproj" } | ForEach-Object {
        Write-Host "Running Tests: $($_.FullName)"
        dotnet test $_.FullName --configuration $(BuildConfiguration) --no-build --verbosity normal
    }
  displayName: 'Run Unit Tests'

- powershell: |
    Get-ChildItem -Path **/*.csproj -Recurse | Where-Object { $_.Name -notmatch "SeleniumUnitTest.csproj" } | ForEach-Object {
        Write-Host "Publishing: $($_.FullName)"
        dotnet publish $_.FullName --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
    }
  displayName: 'Publish Projects'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
