trigger:
- main  # Runs when code is pushed to 'main'

pool:
  vmImage: 'windows-2016'  # âœ… Use Windows-2016 (Has .NET 4.5 preinstalled)

variables:
  buildConfiguration: 'Release'
  artifactName: 'drop'

steps:
# **ðŸ”¹ Restore NuGet Packages**
- task: DotNetCoreCLI@2
  displayName: 'Restore .NET Packages'
  inputs:
    command: 'restore'
    projects: '**/*.sln'

# **ðŸ”¹ Build Solution (Forces MSBuild to Use VS2017)**
- task: VSBuild@1
  displayName: 'Build Solution'
  inputs:
    solution: '**/*.sln'
    msbuildArgs: '/p:VisualStudioVersion=15.0'  # âœ… Forces MSBuild to use VS2017 (Compatible with .NET 4.5)
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# **ðŸ”¹ Run Tests**
- task: VSTest@2
  displayName: 'Run Tests'
  inputs:
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# **ðŸ”¹ Publish Application**
- task: DotNetCoreCLI@2
  displayName: 'Publish Application'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# **ðŸ”¹ Save Build Artifacts**
- task: PublishBuildArtifacts@1
  displayName: 'Save Build Artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: '$(artifactName)'
